from flask import Flask, render_template, jsonify
from sqlalchemy import create_engine
from sqlalchemy.orm import sessionmaker

app = Flask(__name__)

# Récupération de l'ip bdd
with open('/vagrant/shared/dbIpAddr.txt', 'r') as f:
    dbAddr = f.readline().strip()
    print("L'adresse de la bdd est :",dbAddr)
    app.config['MYSQL_HOST'] = dbAddr

app.config['MYSQL_USER'] = 'server'
app.config['MYSQL_PASSWORD'] = '4#j4TA-qNf5yj5M5^3D+'
app.config['MYSQL_DB'] = 'MonSite'

# Créez une URL de connexion à la base de données MySQL
db_url = 'mysql://' + app.config['MYSQL_USER'] +':'+ app.config['MYSQL_PASSWORD'] + '@'+ app.config['MYSQL_HOST'] +'/' + app.config['MYSQL_DB']

# Créez une instance de moteur SQLAlchemy
engine = create_engine(db_url)

# Créez une session pour interagir avec la base de données
Session = sessionmaker(bind=engine)
session = Session()

@app.route('/')
def showUsers():
    try :
        result = session.execute("SELECT * FROM Users")
        return jsonify([dict(row) for row in result])
    except Exception as e:
        print("Erreur d'exécution de la requête", e)

@app.route('/form')
def frontend():
    return render_template('formulaire-connexion.html', name="Frontend")

if __name__ == '__main__':
    app.run(host='0.0.0.0')